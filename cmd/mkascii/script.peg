package main

import "image"

type Grammar Peg {
	script Script

	nums []int
	coords []image.Point
	rectangle image.Rectangle
	group *Group
	id string
	fgc int
	bgc int
	// Command will clobber fully transparent blocks.
	hard bool
}

Grammar <- _wsnl? ((command / _comment) _comment? _wsnl?)* !.

command <- group / stmt
group <- 'group' _wsnl id { p.openGroup() } _wsnl?
         '{' _wsnl? ((stmt  / _comment) _comment? _wsnl)* '}' { p.closeGroup() }

stmt <- { p.nums, p.fgc, p.bgc, p.hard = nil, -1, -1, false }
        (box / bbox / fbox / put / cput / scale / clip / flip / rotate / mirror / cleartext)

box <- 'box' _ws rect_option _ws color { p.addStmt(p.box())  }
bbox <- 'bbox' (_ws _hard)? _ws rect_option _ws color { p.addStmt(p.bbox()) }
fbox <- 'fbox' (_ws _hard)? _ws rect_option _ws color { p.addStmt(p.fbox()) }
put <- 'put' _ws id _ws xy { p.addStmt(p.put()) }
cput <- 'cput' _ws id _ws xy { p.addStmt(p.cput()) }
scale <- 'scale' _ws xy { p.addStmt(p.scale()) }
clip <- 'clip' _ws rect { p.addStmt(p.clip()) }
flip <- 'flip' { p.addStmt(p.flip()) }
mirror <- 'mirror' { p.addStmt(p.mirror()) }
rotate <- 'rotate' _ws num { p.addStmt(p.rotate()) }
cleartext <- 'cleartext' { p.addStmt(p.clearText()) }

rect_option <- (rect / ('?' { p.nums = append(p.nums, -1, -1, -1, -1); p.xy(); p.xy(); p.rect() }))
rect <- xy _ws xy { p.rect() }
xy <- num _ws num { p.xy() }
num <- <('-'? [0-9]+)> { p.num(text) }
id <- <(!_wsnl .)+> { p.id = text }

color <- num { p.fgc = p.popNum() } _ws? (',' _ws? num { p.bgc = p.popNum() })? 

_hard <- 'hard' { p.hard = true }
_ws <- [ \t]+
_wsnl <- <[ \t\n\r]+>
_comment <- (';' (![\n\r] .)*)
